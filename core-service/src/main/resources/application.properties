spring.application.name=core-service
server.port=9090
server.servlet.context-path=/core

jwt.signerKey=2XLKJP1rXe9w+hKNSaeQff0JrjDz2BFBBwBx0U06saUhxzzUDSWz3Ah/l0O5fZvY

# Database connection
spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3306/core_db}?createDatabaseIfNotExist=true
#spring.datasource.username=${DB_USERNAME:root}
#spring.datasource.password=${DB_PASSWORD:12345}
spring.datasource.username=${coredb.username:root}
spring.datasource.password=${coredb.password:12345}

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA config
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#AccessLog
logging.file.name=logs/access_log.log
#logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG

# swagger
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.operations-sorter=alpha

#Redis
spring.cache.type=redis
spring.redis.host=localhost
spring.redis.port=6379

#Keycloak
keycloak.credentials.secret=ooUBapIoUyXVrJIlALFHSpwVvhuktYuK
keycloak.auth-server-url=http://localhost:8080
keycloak.realm=SpringAPI
keycloak.resource=admin-cli
keycloak.bearer-only=true
keycloak.public-client=false
keycloak.ssl-required=none
keycloak.cors=true
env.username=admin
env.password=admin123

## Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9094

#message simple
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#Object message
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


#Temporal config
temporal.server.host=localhost:7233
temporal.workers.default.task-queue=MyTaskQueue

## Circuit breaker config
resilience4j.circuitbreaker.configs.default.failure-rate-threshold=50
resilience4j.circuitbreaker.configs.default.minimum-number-of-calls=5
resilience4j.circuitbreaker.configs.default.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.configs.default.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.configs.default.sliding-window-size=10
resilience4j.circuitbreaker.configs.default.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.gitHubController.baseConfig=default

## Retry config
resilience4j.retry.configs.default.max-attempts=3
resilience4j.retry.configs.default.wait-duration=1s
resilience4j.retry.metrics.legacy.enabled=true
resilience4j.retry.metrics.enabled=true
resilience4j.retry.instances.gitHubController.baseConfig=default

## Time limiter config
resilience4j.timelimiter.metrics.enabled=true
resilience4j.timelimiter.configs.default.timeout-duration=4s
resilience4j.timelimiter.configs.default.cancel-running-future=true
resilience4j.timelimiter.instances.gitHubController.baseConfig=default

## Bulkhead config
resilience4j.bulkhead.metrics.enabled=true
resilience4j.bulkhead.configs.default.max-concurrent-calls=3
resilience4j.bulkhead.configs.default.max-wait-duration=1
resilience4j.bulkhead.instances.gitHubController.baseConfig=default

## Rate limiter config
resilience4j.ratelimiter.metrics.enabled=true
resilience4j.ratelimiter.configs.default.register-health-indicator=true
resilience4j.ratelimiter.configs.default.limit-for-period=5
resilience4j.ratelimiter.configs.default.limit-refresh-period=60s
resilience4j.ratelimiter.configs.default.timeout-duration=0s
resilience4j.ratelimiter.configs.default.allow-health-indicator-to-fail=true
resilience4j.ratelimiter.configs.default.subscribe-for-events=true
resilience4j.ratelimiter.configs.default.event-consumer-buffer-size=50
resilience4j.ratelimiter.instances.gitHubController.baseConfig=default

# Zipkin config
spring.sleuth.enabled=true
spring.zipkin.enabled=true
spring.zipkin.baseUrl=http://localhost:9411/zipkin/
spring.sleuth.sampler.probability=1.0


# Dubbo config
dubbo.application.name=core-service
dubbo.protocol.name=dubbo
dubbo.protocol.port=20880
dubbo.registry.address=zookeeper://${DOCKER_HOST:localhost}:2181
#dubbo.application.qos-port=22223

#Micrometer
management.endpoints.web.exposure.include=*
management.metrics.export.prometheus.enabled=true
management.endpoint.prometheus.enabled=true

#Vault config
spring.cloud.vault.kv.enabled=true
spring.cloud.vault.authentication=TOKEN
spring.cloud.vault.token=hvs.kGqG1YEmz0fUsHLFO0J0o5K1
spring.cloud.vault.scheme=http
spring.cloud.vault.host=${DOCKER_HOST:localhost}
spring.cloud.vault.port=8200
spring.config.import=vault://













